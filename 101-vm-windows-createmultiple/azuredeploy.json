{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "apiProfile": "2018-03-01-hybrid",
    "parameters": {
        "vmNamePrefix": {
            "type": "string",
            "defaultValue": "WinVM-",
            "minLength": 1
        },
        "adminUsername": {
            "type": "string",
            "defaultValue": "vmadmin",
            "minLength": 1
        },
        "adminPassword": {
            "type": "securestring",
            "defaultValue": "[concat('Subscription#', subscription().subscriptionId)]"
        },
        "imageSku": {
            "type": "string",
            "defaultValue": "2019-Datacenter",
            "allowedValues": [
                    "2019-Datacenter",
                    "2016-Datacenter",
                    "2012-R2-Datacenter",
                    "2012-Datacenter",        
                    "2008-R2-SP1"
            ]
        },
        "storageAccountType": {
            "type": "string",
            "defaultValue": "Standard_LRS",
            "allowedValues": [
                "Standard_LRS",
                "Premium_LRS"
            ]
        },
        "vmCount": {
            "type": "int",
            "defaultValue": 3,
            "allowedValues":[
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10
            ],
            "metadata": {
                "description": "Number of Windows VMs to create."
            }
        },
        "vmSize": {
            "type": "string",
            "defaultValue": "Standard_A1",
            "allowedValues": [
                "Basic_A0",
                "Basic_A1",
                "Basic_A2",
                "Basic_A3",
                "Basic_A4",
                "Standard_A0",
                "Standard_A1",
                "Standard_A2",
                "Standard_A3",
                "Standard_A4",
                "Standard_A5",
                "Standard_A6",
                "Standard_A7",
                "Standard_D1",
                "Standard_D2",
                "Standard_D3",
                "Standard_D4",
                "Standard_D11",
                "Standard_D12",
                "Standard_D13",
                "Standard_D14"
            ]
        }
    },
    "variables": {
        "imagePublisher": "MicrosoftWindowsServer",
        "imageOffer": "WindowsServer",
        "vnetID": "[resourceId('Microsoft.Network/virtualNetworks', 'virtualnetwork')]",
        "subnetRef": "[concat(variables('vnetID'), '/subnets/', variables('virtualnetworkSubnet1Name'))]",
        "nicName": "[concat(parameters('vmNamePrefix'), 'NetworkInterface')]",
        "virtualnetworkPrefix": "10.0.0.0/16",
        "virtualnetworkSubnet1Name": "Subnet-1",
        "virtualnetworkSubnet1Prefix": "10.0.0.0/24",
        "virtualnetworkSubnet2Name": "Subnet-2",
        "virtualnetworkSubnet2Prefix": "10.0.1.0/24"
    },
    "resources": [
    {
        "name": "virtualnetwork",
        "type": "Microsoft.Network/virtualNetworks",
        "location": "[resourceGroup().location]",
        "dependsOn": [],
        "tags": {
            "displayName": "virtualnetwork"
        },
        "properties": {
            "addressSpace": {
            "addressPrefixes": [
                "[variables('virtualnetworkPrefix')]"
            ]
            },
            "subnets": [
            {
                "name": "[variables('virtualnetworkSubnet1Name')]",
                "properties": {
                "addressPrefix": "[variables('virtualnetworkSubnet1Prefix')]"
                }
            },
            {
                "name": "[variables('virtualnetworkSubnet2Name')]",
                "properties": {
                "addressPrefix": "[variables('virtualnetworkSubnet2Prefix')]"
                }
            }
            ]
        }
    },
    {
        "name": "[concat(variables('nicName'),copyIndex())]",
        "type": "Microsoft.Network/networkInterfaces",
        "location": "[resourceGroup().location]",
        "copy": {
            "name": "windowsNicLoop",
            "count": "[parameters('vmCount')]"
        },
        "dependsOn": [
            "[concat('Microsoft.Network/virtualNetworks/','virtualnetwork')]"
        ],
        "properties": {
            "ipConfigurations": [
            {
                "name": "ipconfig1",
                "properties": {
                    "privateIPAllocationMethod": "Dynamic",
                    "subnet": {
                        "id": "[variables('subnetRef')]"
                    }
                }
            }
            ]
        }
    },
    {
        "name": "[concat(parameters('vmNamePrefix'), copyIndex())]",
        "type": "Microsoft.Compute/virtualMachines",
        "location": "[resourceGroup().location]",
        "copy": {
            "name": "windowsVmLoop",
            "count": "[parameters('vmCount')]"
        },
        "dependsOn": [
            "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'), copyIndex())]"
        ],
        "properties": {
            "hardwareProfile": {
                "vmSize": "[parameters('vmSize')]"
            },
            "osProfile": {
                "computerName": "[parameters('vmNamePrefix')]",
                "adminUsername": "[parameters('adminUsername')]",
                "adminPassword": "[parameters('adminPassword')]"
            },
            "storageProfile": {
                "imageReference": {
                    "publisher": "[variables('imagePublisher')]",
                    "offer": "[variables('imageOffer')]",
                    "sku": "[parameters('imageSku')]",
                    "version": "latest"
                },
                "osDisk": {
                    "name": "[concat(parameters('vmNamePrefix'), copyIndex(), '-osDisk')]",
                    "managedDisk":{
                        "storageAccountType": "[parameters('storageAccountType')]"
                    },
                    "caching": "ReadWrite",
                    "createOption": "FromImage"
                }
            },
            "networkProfile": {
            "networkInterfaces": [
                {
                    "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('nicName'),copyIndex()))]"
                }
            ]
            }
        }
    }
    ]
}